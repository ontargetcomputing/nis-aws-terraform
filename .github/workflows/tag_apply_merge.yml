name: Apply and Release

on:
  workflow_dispatch:
    inputs:
      SEMVER_BUMP:
        description: 'Is this a major, minor, or patch update'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  identify_modified_workspace:
    uses: ./.github/workflows/identify_modified_workspace.yml

  # apply_and_merge:
  #   needs: 
  #     - identify_modified_workspace
  #     - process-comment
  #   if: ${{ needs.identify_modified_workspace.outputs.workspace_path != '' && needs.process_comment.outputs.trigger == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       if: steps.check-comment.outputs.trigger == 'true'
  #       uses: actions/checkout@v4

  #     - name: ECHO
  #       if: steps.check-comment.outputs.trigger == 'true'
  #       run: |
  #         echo "HELLO"



    
  # #     # - name: Parse Command
  # #     #   id: parse-command
  # #     #   run: |
  # #     #     COMMENT="${{ github.event.comment.body }}"
          
  # #     #     # Check if comment starts with 'action: apply'
  # #     #     if [[ ! "$COMMENT" =~ ^action:\ apply ]]; then
  # #     #       echo "Comment must start with 'action: apply'"
  # #     #       exit 1
  # #     #     fi
          
  # #     #     # Extract version bump
  # #     #     VERSION_BUMP=$(echo "$COMMENT" | grep -oP 'semver: \K(major|minor|patch)' || echo '')
  # #     #     if [[ -z "$VERSION_BUMP" ]]; then
  # #     #       echo "Error: Invalid or missing semver specification."
  # #     #       echo "Comment must follow format:"
  # #     #       echo "action: apply"
  # #     #       echo "semver: [major|minor|patch]"
  # #     #       echo "comment: your comment here"
  # #     #       exit 1
  # #     #     fi
  # #     #     VERSION_BUMP=$(echo "$VERSION_BUMP" | tr '[:lower:]' '[:upper:]')
          
  # #     #     # Extract comment
  # #     #     COMMENT_TEXT=$(echo "$COMMENT" | grep -oP 'comment: \K(.*)$' || echo '')
  # #     #     if [[ -z "$COMMENT_TEXT" ]]; then
  # #     #       echo "Error: Missing comment text"
  # #     #       echo "Please provide a comment describing the changes"
  # #     #       exit 1
  # #     #     fi
          
  # #     #     echo "version_bump=$VERSION_BUMP" >> $GITHUB_OUTPUT
  # #     #     echo "comment_text=$COMMENT_TEXT" >> $GITHUB_OUTPUT

  # #     # - name: Comment on Invalid Format
  # #     #   if: failure()
  # #     #   uses: actions/github-script@v7
  # #     #   with:
  # #     #     script: |
  # #     #       github.rest.issues.createComment({
  # #     #         owner: context.repo.owner,
  # #     #         repo: context.repo.repo,
  # #     #         issue_number: ${{ github.event.issue.number }},
  # #     #         body: `‚ùå Invalid comment format. Please use:
              
  # #     #         action: apply
  # #     #         semver: [major|minor|patch]
  # #     #         comment: your comment here`
  # #     #       });